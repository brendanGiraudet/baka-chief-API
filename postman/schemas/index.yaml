openapi: "3.0.0"
info:
    version: "1.0.0"
    title: "Sample API"
    description: Buy or rent spacecrafts
servers:
    - url: "https://localhost:7177"
paths:
    /spacecrafts/{spacecraftId}:
        parameters:
            - name: spacecraftId
              description: The unique identifier of the spacecraft
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/SpacecraftId"
        get:
            summary: Read a spacecraft
            responses:
                "200":
                    description: The spacecraft corresponding to the provided `spacecraftId`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Spacecraft"
                404:
                    description: No spacecraft found for the provided `spacecraftId`
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /odata/ProductInfos?$top={top}&$skip={skip}:
        parameters:
            - name: top
              description: items size number
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/top"
            - name: skip
              description: skipped items number
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/skip"
        get:
            summary: Get productinfos
            responses:
                "200":
                    description: Productinfo array
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Spacecraft"
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /odata/ProductInfos('{code}'):
        parameters:
            - name: code
              description: code of the searched productinfo 
              in: path
              required: true
              schema:
                  $ref: "#/components/schemas/code"
        get:
            summary: Get productinfo by code
            responses:
                "200":
                    description: Productinfo
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Spacecraft"
                500:
                    description: Unexpected error
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Error"
    /nutrimentType:
        get:
            summary: get nutriment type list
            responses:
                "200":
                    description: "get multiple nutriment type"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NutrimentType"
                "204":
                    description: "Empty nutriment type list"
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/NutrimentType"

components:
    schemas:
        code:
            description: The unique identifier of the product info 
            type: string
        top:
            description: The number of the items size 
            type: integer
        skip:
            description: The number of the skipped items 
            type: integer
        SpacecraftId:
            description: The unique identifier of a spacecraft
            type: string
        Spacecraft:
            type: object
            required:
                - id
                - name
                - type
            properties:
                id:
                    $ref: "#/components/schemas/SpacecraftId"
                name:
                    type: string
                type:
                    type: string
                    enum:
                        - capsule
                        - probe
                        - satellite
                        - spaceplane
                        - station
                description:
                    type: string
        NutrimentType:
            type: object
            properties:
                Id:
                    type: string
                Name:
                    type: string
        Error:
            type: object
            required:
                - message
            properties:
                message:
                    description: A human readable error message
                    type: string
    securitySchemes:
        ApiKey:
            type: apiKey
            in: header
            name: X-Api-Key
security:
    - ApiKey: []
