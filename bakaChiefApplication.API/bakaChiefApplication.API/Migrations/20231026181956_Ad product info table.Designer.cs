// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using bakaChiefApplication.API.Repositories;

#nullable disable

namespace bakaChiefApplication.API.Migrations
{
    [DbContext(typeof(DatabaseContext))]
    [Migration("20231026181956_Ad product info table")]
    partial class Adproductinfotable
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "7.0.10");

            modelBuilder.Entity("IngredientNutriment", b =>
                {
                    b.Property<string>("IngredientsId")
                        .HasColumnType("TEXT");

                    b.Property<string>("NutrimentsId")
                        .HasColumnType("TEXT");

                    b.HasKey("IngredientsId", "NutrimentsId");

                    b.HasIndex("NutrimentsId");

                    b.ToTable("IngredientNutriment");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.Ingredient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("DeletedDate")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.Nutriment", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Nutriments");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.ProductInfo", b =>
                {
                    b.Property<string>("code")
                        .HasColumnType("TEXT");

                    b.Property<string>("abbreviated_product_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("added_salt_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("added_sugars_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("additives")
                        .HasColumnType("TEXT");

                    b.Property<string>("additives_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("additives_n")
                        .HasColumnType("TEXT");

                    b.Property<string>("additives_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("alcohol_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("allergens")
                        .HasColumnType("TEXT");

                    b.Property<string>("allergens_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("alpha_linolenic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("arachidic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("arachidonic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("behenic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("beta_carotene_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("beta_glucan_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("bicarbonate_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("biotin_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("brand_owner")
                        .HasColumnType("TEXT");

                    b.Property<string>("brands")
                        .HasColumnType("TEXT");

                    b.Property<string>("brands_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("butyric_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("caffeine_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("calcium_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("capric_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("caproic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("caprylic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("carbohydrates_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("carbon_footprint_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("carbon_footprint_from_meat_or_fish_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("carnitine_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("casein_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("categories")
                        .HasColumnType("TEXT");

                    b.Property<string>("categories_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("categories_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("cerotic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("chloride_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("chlorophyl_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("cholesterol_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("choline_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("chromium_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("cities")
                        .HasColumnType("TEXT");

                    b.Property<string>("cities_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("cocoa_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("collagen_meat_protein_ratio_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("completeness")
                        .HasColumnType("TEXT");

                    b.Property<string>("copper_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("countries")
                        .HasColumnType("TEXT");

                    b.Property<string>("countries_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("countries_tags")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("created_datetime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("created_t")
                        .HasColumnType("INTEGER");

                    b.Property<string>("creator")
                        .HasColumnType("TEXT");

                    b.Property<string>("data_quality_errors_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("dihomo_gamma_linolenic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("docosahexaenoic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("ecoscore_grade")
                        .HasColumnType("TEXT");

                    b.Property<string>("ecoscore_score")
                        .HasColumnType("TEXT");

                    b.Property<string>("eicosapentaenoic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("elaidic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("emb_codes")
                        .HasColumnType("TEXT");

                    b.Property<string>("emb_codes_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("energy_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("energy_from_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("energy_kcal_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("energy_kj_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("erucic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("erythritol_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("fiber_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("first_packaging_code_geo")
                        .HasColumnType("TEXT");

                    b.Property<string>("fluoride_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("folates_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("food_groups")
                        .HasColumnType("TEXT");

                    b.Property<string>("food_groups_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("food_groups_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("fructose_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("fruits_vegetables_nuts_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("fruits_vegetables_nuts_dried_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("fruits_vegetables_nuts_estimate_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("fruits_vegetables_nuts_estimate_from_ingredients_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("gamma_linolenic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("generic_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("glucose_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("glycemic_index_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("gondoic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("image_ingredients_small_url")
                        .HasColumnType("TEXT");

                    b.Property<string>("image_ingredients_url")
                        .HasColumnType("TEXT");

                    b.Property<string>("image_nutrition_small_url")
                        .HasColumnType("TEXT");

                    b.Property<string>("image_nutrition_url")
                        .HasColumnType("TEXT");

                    b.Property<string>("image_small_url")
                        .HasColumnType("TEXT");

                    b.Property<string>("image_url")
                        .HasColumnType("TEXT");

                    b.Property<string>("ingredients_analysis_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("ingredients_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("ingredients_text")
                        .HasColumnType("TEXT");

                    b.Property<string>("inositol_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("insoluble_fiber_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("iodine_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("iron_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("labels")
                        .HasColumnType("TEXT");

                    b.Property<string>("labels_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("labels_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("lactose_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("last_image_datetime")
                        .HasColumnType("TEXT");

                    b.Property<string>("last_image_t")
                        .HasColumnType("TEXT");

                    b.Property<string>("last_modified_by")
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("last_modified_datetime")
                        .HasColumnType("TEXT");

                    b.Property<long?>("last_modified_t")
                        .HasColumnType("INTEGER");

                    b.Property<string>("lauric_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("lignoceric_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("linoleic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("magnesium_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("main_category")
                        .HasColumnType("TEXT");

                    b.Property<string>("main_category_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("maltodextrins_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("maltose_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("manganese_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("manufacturing_places")
                        .HasColumnType("TEXT");

                    b.Property<string>("manufacturing_places_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("mead_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("melissic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("molybdenum_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("monounsaturated_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("montanic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("myristic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("nervonic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("nitrate_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("no_nutrition_data")
                        .HasColumnType("TEXT");

                    b.Property<string>("nova_group")
                        .HasColumnType("TEXT");

                    b.Property<string>("nucleotides_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("nutrient_levels_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("nutriscore_grade")
                        .HasColumnType("TEXT");

                    b.Property<string>("nutriscore_score")
                        .HasColumnType("TEXT");

                    b.Property<string>("nutrition_score_fr_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("nutrition_score_uk_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("oleic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("omega_3_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("omega_6_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("omega_9_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("origins")
                        .HasColumnType("TEXT");

                    b.Property<string>("origins_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("origins_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("owner")
                        .HasColumnType("TEXT");

                    b.Property<string>("packaging")
                        .HasColumnType("TEXT");

                    b.Property<string>("packaging_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("packaging_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("packaging_text")
                        .HasColumnType("TEXT");

                    b.Property<string>("palmitic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("pantothenic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("ph_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("phosphorus_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("phylloquinone_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("pnns_groups_1")
                        .HasColumnType("TEXT");

                    b.Property<string>("pnns_groups_2")
                        .HasColumnType("TEXT");

                    b.Property<string>("polyols_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("polyunsaturated_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("popularity_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("potassium_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("product_name")
                        .HasColumnType("TEXT");

                    b.Property<string>("product_quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("proteins_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("purchase_places")
                        .HasColumnType("TEXT");

                    b.Property<string>("quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("salt_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("saturated_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("selenium_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("serum_proteins_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("serving_quantity")
                        .HasColumnType("TEXT");

                    b.Property<string>("serving_size")
                        .HasColumnType("TEXT");

                    b.Property<string>("silica_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("sodium_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("soluble_fiber_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("starch_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("states")
                        .HasColumnType("TEXT");

                    b.Property<string>("states_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("states_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("stearic_acid_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("stores")
                        .HasColumnType("TEXT");

                    b.Property<string>("sucrose_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("sugars_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("sulphate_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("taurine_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("traces")
                        .HasColumnType("TEXT");

                    b.Property<string>("traces_fr")
                        .HasColumnType("TEXT");

                    b.Property<string>("traces_tags")
                        .HasColumnType("TEXT");

                    b.Property<string>("trans_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("unique_scans_n")
                        .HasColumnType("TEXT");

                    b.Property<string>("unsaturated_fat_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("url")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_a_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_b12_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_b1_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_b2_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_b6_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_b9_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_c_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_d_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_e_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_k_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("vitamin_pp_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("water_hardness_100g")
                        .HasColumnType("TEXT");

                    b.Property<string>("zinc_100g")
                        .HasColumnType("TEXT");

                    b.HasKey("code");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.Recip", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageFilePath")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("PersonsNumber")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("Recips");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.RecipIngredient", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("IngredientId")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("MeasureUnit")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("IngredientId");

                    b.HasIndex("RecipId");

                    b.ToTable("RecipIngredients");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.RecipStep", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<int>("Number")
                        .HasColumnType("INTEGER");

                    b.Property<string>("RecipId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("RecipId");

                    b.ToTable("RecipSteps");
                });

            modelBuilder.Entity("IngredientNutriment", b =>
                {
                    b.HasOne("bakaChiefApplication.API.DatabaseModels.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bakaChiefApplication.API.DatabaseModels.Nutriment", null)
                        .WithMany()
                        .HasForeignKey("NutrimentsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.RecipIngredient", b =>
                {
                    b.HasOne("bakaChiefApplication.API.DatabaseModels.Ingredient", "Ingredient")
                        .WithMany("RecipIngredients")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("bakaChiefApplication.API.DatabaseModels.Recip", "Recip")
                        .WithMany("RecipIngredients")
                        .HasForeignKey("RecipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Ingredient");

                    b.Navigation("Recip");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.RecipStep", b =>
                {
                    b.HasOne("bakaChiefApplication.API.DatabaseModels.Recip", "Recip")
                        .WithMany("RecipSteps")
                        .HasForeignKey("RecipId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.Navigation("Recip");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.Ingredient", b =>
                {
                    b.Navigation("RecipIngredients");
                });

            modelBuilder.Entity("bakaChiefApplication.API.DatabaseModels.Recip", b =>
                {
                    b.Navigation("RecipIngredients");

                    b.Navigation("RecipSteps");
                });
#pragma warning restore 612, 618
        }
    }
}
